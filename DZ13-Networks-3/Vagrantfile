
MACHINES = {
    :b1 => {
          :box_name => "bento/ubuntu-20.04",
          :cpus => 2,
          :memory => 512,
          :net => [
                     {ip: '10.10.1.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lab-net"},
                  ]
    },
    :b2 => {
          :box_name => "bento/ubuntu-20.04",
          :cpus => 2,
          :memory => 512,
          :net => [
                     {ip: '10.10.1.2', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lab-net"},
                  ]
    },
    :b3 => {
          :box_name => "bento/ubuntu-20.04",
          :cpus => 2,
          :memory => 512,
          :net => [
                     {ip: '10.10.1.3', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lab-net"},
                  ]
    },
    :h1 => {
          :box_name => "bento/ubuntu-20.04",
          :cpus => 2,
          :memory => 512,
          :net => [
                     {ip: '10.10.1.11', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lab-net"},
                  ]
    },
    :h2 => {
          :box_name => "bento/ubuntu-20.04",
          :cpus => 2,
          :memory => 512,
          :net => [
                     {ip: '10.10.1.12', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lab-net"},
                  ]
    },
    :client => {
          :box_name => "bento/ubuntu-20.04",
          :cpus => 2,
          :memory => 512,
          :net => [
                     {ip: '10.10.1.5', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "lab-net"},
                  ]
    },
}
  
  Vagrant.configure("2") do |config|
  
    MACHINES.each do |boxname, boxconfig|
      
      config.vm.define boxname do |box|

#          box.vm.synced_folder '.', '/vagrant', disabled: true
          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          boxconfig[:net].each do |ipconf|
            box.vm.network "private_network", ipconf
          end
          
          if boxconfig.key?(:public)
            box.vm.network "public_network", boxconfig[:public]
          end
          
          box.vm.provider "virtualbox" do |v|
            # Set VM RAM size and CPU count
            v.memory = boxconfig[:memory]
            v.cpus = boxconfig[:cpus]
            v.default_nic_type = "virtio"
            v.name = boxname.to_s
          end
      end
    end
   config.vm.provision "ansible" do |ansible|
     ansible.playbook = "provisioning/playbook.yml"
     ansible.compatibility_mode = "auto"
     ansible.become = "true"
     ansible.groups = {
       "web" => ["h1", "h2"],
       "balancers"  => ["b1", "b2", "b3"]
       }
     ansible.host_vars = {
       "b1" => {"vrrp_state1" => "MASTER",
                "vrrp_state2" => "BACKUP",
                "vrrp_state3" => "BACKUP",
                "router_id" => 1,
                "vrrp_prio1" => 102,
                "vrrp_prio2" => 101,
                "vrrp_prio3" => 100,
                },
       "b2" => {"vrrp_state1" => "BACKUP",
                "vrrp_state2" => "MASTER",
                "vrrp_state3" => "BACKUP",
                "router_id" => 2,
                "vrrp_prio1" => 101,
                "vrrp_prio2" => 102,
                "vrrp_prio3" => 100,
                },
       "b3" => {"vrrp_state1" => "BACKUP",
                "vrrp_state2" => "BACKUP",
                "vrrp_state3" => "MASTER",
                "router_id" => 3,
                "vrrp_prio1" => 100,
                "vrrp_prio2" => 101,
                "vrrp_prio3" => 102,
                }
     }
    #ansible.limit = "balancers"
   end
  end
